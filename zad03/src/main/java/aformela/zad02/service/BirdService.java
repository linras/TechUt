package aformela.zad02.service;
import java.sql.*;
import java.util.ArrayList;
import java.util.List;

import aformela.zad02.domain.Bird;

public class BirdService {
	private Connection connection;

	private List<Bird> birds = new ArrayList<Bird>();
    private String url = "jdbc:hsqldb:hsql://localhost/workdb";

    private String createTableBird = "CREATE TABLE Bird(id bigint GENERATED BY DEFAULT AS IDENTITY, name varchar(30) UNIQUE , date_of_birth date, is_female boolean, weight double, count_of_colors int)";

    private Statement statement;

    public BirdService(){
        try{
           connection = DriverManager.getConnection(url);
           statement = connection.createStatement();

            ResultSet resultSet = connection.getMetaData().getTables(null,null,null,null);
            boolean tableExists = false;
            while (resultSet.next()){
                if("Bird".equalsIgnoreCase(resultSet.getString("table_name"))){
                    tableExists = true;
                    break;
                }
            }
            if(!tableExists){
                statement.executeUpdate(createTableBird);
            }

        }catch (SQLException e){
            e.printStackTrace();
        }
    }
    
    public boolean addAllBirds(List<Bird> birds) throws SQLException {
    	try {
    		connection.setAutoCommit(false);
    		for(Bird bird: birds) {
        		addBird(bird);
        	}
    		connection.commit();
		} catch (Exception e) {
			System.out.println("Wycofanie transakcji");
			try {
				connection.rollback();
			} catch (Exception e2) {
				System.out.println("Ratunku!");
			}
		}
    	
    	return false;
    }
    
    public List<Bird> getAllBirds(){
    	return birds;
    }

    public void addBird(Bird bird) throws SQLException {
        String addBirdSql = "INSERT INTO Bird (name ,date_of_birth ,is_female, weight, count_of_colors) VALUES " +
                "(\'" + bird.getName() + "\' ,\'" + bird.getDateOfBirth() + "\' ," + bird.isFemale() + " ," + bird.getWeight() +" ,"+ bird.getCountOfColors() +")";
        statement.executeUpdate(addBirdSql);
    }
    
    public void deleteBird(Bird bird) throws SQLException {
        ResultSet resultSet = statement.executeQuery("SELECT id FROM Bird WHERE name=\'"+bird.getName()+"\'");

        String deleteBirdSql = "DELETE FROM Bird WHERE name=\'" + bird.getName()+"\'";
        statement.executeUpdate(deleteBirdSql);
    }
}
